" Vundle-required settings
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim

" Vundle bundles (:BundleInstall after adding one to install it)
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
"
" Look up session management plugin
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'flazz/vim-colorschemes'
Plugin 'fs111/pydoc.vim'
Plugin 'majutsushi/tagbar'
Plugin 'mileszs/ack.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-unimpaired'
Plugin 'google/styleguide', { 'rtp': 'google_python_style.vm' }
Plugin 'yssl/autocwd.vim'
Plugin 'rking/ag.vim'
Plugin 'tmhedberg/SimpylFold'
Plugin 'elzr/vim-json'
Plugin 'kchmck/vim-coffee-script'
Plugin 'plasticboy/vim-markdown'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
call vundle#end()
filetype plugin indent on

" Mappings
let mapleader ="\<Space>"
nnoremap <Leader>p :CtrlP<CR>
nnoremap <Leader>q :q<CR>
nnoremap <Leader>a :Ack 
nnoremap <Leader>d :Pydoc 
nnoremap <Leader>w :w<CR>
nnoremap <Leader>fj :FormatJson<CR>
nnoremap <Leader>r :set readonly!<CR>
nnoremap <Leader>m :set modifiable!<CR>

imap jj <Esc>
nmap <Leader>t :TagbarToggle<CR>
nmap <C-n> :cn<CR>
nmap <C-b> :cp<CR>

" Long lines
set nowrap

" Appearance
syntax on
set guifont=Bitstream\ Vera\ Sans\ Mono:h13
set number
hi cursorline cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred
set cursorline
"colorscheme maui
colorscheme molokai
hi Search guibg=LightBlue
match ErrorMsg '\%>80v.\+'

" Whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()
" Python specific
let python_highlight_all = 1

" Ag
let g:ackprg = 'ag --nogroup --nocolor --column'

" CtrlP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlPMixed'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_root_markers = ['.working']
let g:ctrlp_user_command = {
  \ 'types': {
    \ 1: ['.git', "cd %s && git ls-files --cached --exclude-standard --others | egrep '.js$|.py$'"],
    \ },
  \ 'fallback': 'find %s -type f'
  \ }

" Pydoc
let g:pydoc_cmd = 'python -m pydoc'
let g:pydoc_open_cmd = 'vsplit'
let g:pydoc_use_drop=1

"set autochdir " Working directory follow current buffer

" Backups
set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
set undodir=~/.vim/undo//

" Cwd management
" Use AutoCWDPrint to test this map
let g:autocwd_patternwd_pairs = [
  \['*.py', '*REPO*'],
  \['*videojs/*.js', '*REPO*/clickTracking/videojs'],
  \['*.js', '*REPO*'],
  \['*', '*REPO*'],
\]

" Search
set ignorecase
set smartcase
set gdefault
set hlsearch

" Json pretty format
command! FormatJson %!python -m json.tool

" Folding
set foldlevelstart=20

" Coffee folding
autocmd BufNewFile,BufReadPost *.coffee setl shiftwidth=2 expandtab

" Tabs
set expandtab
set tabstop=4
set shiftwidth=4
