alias ag=rg
alias d=docker
alias dc=docker-compose
alias first="awk '{print \$1}'"
alias g=git
alias h=howdoi
alias l=ll
alias ll="ls -al"
alias lsl=ll
alias .....='cd ..;cd ..;cd ..; cd ..'
alias ....='cd ..;cd ..;cd ..'
alias ...='cd ..;cd ..'
alias ..='cd ..'
alias a='rg'
alias rg='rg --ignore-file ~/.ignore'
alias cc='cookiecutter'
alias ccf='cookiecutter https://github.com/sloria/cookiecutter-flask.git'
alias ccp='cookiecutter https://github.com/audreyr/cookiecutter-pypackage.git'
alias d='docker'
alias dc='docker-compose'
alias dk='docker ps -q | xargs docker kill'
alias g=git
alias ga='git add -p'
alias gb='git branch'
alias gcb='git checkout -b'
alias gcm='git checkout master'
alias gdm='git diff master'
alias gp='git pull'
alias gpf='git push --force-with-lease'
alias gpu='git push'
alias grc='git rebase --continue'
alias grm='git rebase master'
alias gsp='git stash pop'
alias gss='git stash save'
alias h='howdoi -n10'
alias hg=rg
alias hi=history
alias i='ipython'
alias l.='ls -Gd .* '
alias l='ll'
alias ll='ls -la'
alias ls='ls -G'
alias n='cd ~/git/nkresge'
alias p='cd ~/git/picnic'
alias pe='docker exec -it $(d ps | grep h-app | first) bash'
alias pytest='pytest -o cache="~/.vim/cache"'
alias rc='cd ~/git/nate/rc-files'
alias s='echo [source ~/.bash_profile]; source ~/.bash_profile'
alias second="awk '{print \$2}'"
alias tcb='testit containers build'
alias tct='tcb && testit containers test'
alias third="awk '{print \$3}'"
alias v='vi `fzf`'
alias w='cd ~/w'
alias ypl='yarn --pure-lockfile'

export COOKIECUTTER_CONFIG='/Users/nate/.cookiecutter.yaml'
export GOPATH="$HOME/go"
export HISTCONTROL=ignoredups:erasedups  # Avoid duplicates
export HISTFILESIZE=10000
export HISTSIZE=10000
export LSCOLORS=gxfxcxdxbxegedabagacad
export NVM_DIR="$HOME/.nvm"
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$PYENV_ROOT/bin:$PATH"
export PATH=$HOME/.local/bin:~/mxmlc/bin:~/bin:$PATH
export PATH=$PATH:node_modules/.bin
export PATH=/usr/local/opt/postgresql@9.6/bin/:$PATH
export PIPENV_IGNORE_VIRTUALENVS=1
export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -c; history -r"  # After each command, append to the history file and reread it
export PS1="\[\033[01;44m\]\w $\[\033[0m\] "
export PYENV_ROOT="$HOME/.pyenv"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export VAULT_ADDR=http://vault-server.in.quid.com
export EDITOR=vim
export VISUAL=mvim

# When the shell exits, append to the history file instead of overwriting it
shopt -s histappend

source ~/.iterm2_shell_integration.`basename $SHELL`
source ~/git-completion.bash

function iterm2_print_user_vars() {
  iterm2_set_user_var gitBranch $((git branch 2> /dev/null) | grep \* | cut -c3-)
}
printf "\e]1337;SetBadgeFormat=%s\a" $(echo -n "\(session.name) \(user.gitBranch)" | base64)
test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

md () {
  mkdir "$1" && cd "$1"
}

problem () {
  p=$(echo $(basename $1) | sed s/-/_/g)
  test_file=${2:-~/__py_templates/__test.py}
  impl_file=${3:-~/__py_templates/__impl.py}
  f="$p/solve.py" ; t="$p/test_${p}.py"
  if [ ! -d $p ]; then
    mkdir "$p" ; cp "$test_file" "$t" ; cp "$impl_file" "$f" ; touch "$p/__init__.py"
  fi
  mvim -O "$f" "$t"
}

gco () {
  git clone $1 && cd $(basename $1 | cut -f 1 -d '.')
}

[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
pyenv activate p3 2> /dev/null

# make tab completion
complete -W "`([[ -r Makefile ]] && grep -oE '^[a-zA-Z0-9_-]+:([^=]|$)' Makefile || cat /dev/null) | sed 's/[^a-zA-Z0-9_-]*$//'`" make
